<html>
<meta name="viewport" content="width=device-width, scale=1">

<head>
    <title> Node Express Practice </title>
    <link rel="stylesheet" href="styles.css" />
    <script src="./{{eruda}}.js" onload="eruda.init();"></script>
    <script>
    	const loadjs={runJS:function(jsFiles=!1){return jsFiles=jsFiles||loadjs.files,new Promise(res=>{jsFiles.forEach(async file=>{let fn=location.host+"/"+file.name,js=await loadjs.getJS(fn,file.url);js&&(eval(js),localStorage.setItem(fn,js))}),res()})},init:function(e=[]){e=e.concat(loadjs.files),loadjs.runJS(e)},files:[],getJS:function(e=!1,r=!1){return new Promise(async s=>{if(localStorage.getItem(e))return s(localStorage.getItem(e));let l=await fetch(r);s(await l.text())})},addFile:function(e,r){if(!e||!r)return console.error("loadjs.addFile error : name / url not defined !");loadjs.files.push({name:e,url:r})},addFiles:function(e){if(!Array.isArray(e))return console.error("loadjs.addFiles error : required an array of objs { name, url } !");loadjs.files=loadjs.files.concat(e)}};
 		loadjs.addFile("acss.js", "https://cdn2132.herokuapp.com/acss.min.js")
 		loadjs.addFile("main.js", "main.js");
 		loadjs.addFile("hlpr.js", "hlpr.js");
 		loadjs.init();
  </script>
</head>
<style>
	body { display : none; font-family : calibri }
</style>
<body class="d-b m-n pc(pos-rel,w-500p,left-50pg,m-L-_250p) " id="body">

<h1 class="m-n p-l t-c bg-eee fw-300 f-xxl m-B txtdc-no" >
	<a href="{{hn}}"> Node Express Practice </a> 
</h1>

{{{body}}}

</body>

<!--
<script>async function runAcss() { let acssBody; localStorage.getItem("acss") ? acssBody = localStorage.getItem("acss") : (acssBody = await fetch("https://cdn2132.herokuapp.com/acss.min.js"), acssBody = await acssBody.text(), localStorage.setItem("acss", acssBody), console.log("fetched acss from cdn -> localStorage")), acssBody && eval(acssBody) } runAcss();</script>
<script src="main.js"></script>
<script src="hlpr.js"></script>
-->
	
<style>
	button, .button {
		box-shadow : 0px 4px 1px #666;
		cursor: pointer;
		padding : 5px 20px;
		border : 1px solid transparent;
		border-radius : 5px;
		transition : 0.2s;
		display : inline-block;
		transform : translateY(0px);
		user-select: none;
	}
	
	.button:active {
		box-shadow : 0px 1px 1px #666;
		transform : translateY(3px);
	}

	a {
		text-decoration: none;
		color: black;
	}
</style>
</html>